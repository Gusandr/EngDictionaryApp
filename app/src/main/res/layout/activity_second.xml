<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="wrap_content"
            android:layout_height="wrap_content" >

        </androidx.constraintlayout.widget.ConstraintLayout>

    </LinearLayout>
    
    <Button
        android:layout_width="200dp"
        android:layout_height="69dp"
        android:layout_weight="1"
        android:text="Открыть ворота!" />

    <Button
        android:layout_width="200dp"
        android:layout_height="69dp"
        android:layout_weight="1"
        android:text="Закрыть ворота" />

    <Button
        android:layout_width="200dp"
        android:layout_height="69dp"
        android:layout_weight="1"
        android:text="Расходимся" />



</LinearLayout>


    <!--
        Views подразделяются на 2 группы:
        Те кто отрисовываются и те которые содержат в себе другие View
        (то есть вьюхи контейнеры)

        Контейнеры отвечают за позиционирование
        и позволяют нам раставлять элементы на экране каким угодно
        сложным образом

        FrameLayout - Самый простой тип контейнера
        Это такой Stack (можно представить в виде стопки карт)
        где элементы накладываются друг на друга и в таком же порядке
        считываются

        Аттрибуты привязки нигде кроме как constraint
        они не на что не влияют

        Для обозначения отступов существуют:
        Margin внешний отступ за пределами границ View
        Padding внутренний отступ внутри границ View

        Аттрибуты которые начинаются на layout влияют не на
        саму View а на родителя - то есть на ту view в которой они
        находятся

        Аттрибут который НЕ начинается со слова layout
        распространяются непосредственно на ту View
        в которой этот аттрибут прописан

        LinerLayout - это компонент который позволяет расставлять
        потомков внутри себя в ряд - горизонтально или вертикально
        Viewшки уже не накладываются друг на друга

        По умолчанию в этом контейнере ориентация горизонтальная
        поэтому элементы выстраиваются в горизонтальную
        последовательность. Обратите внимание что кнопки выстраиваются
        слева-направо в порядке их добавления на макет


    -->